# -*- coding: utf-8 -*-
"""урок 11 задание 1 "WordVec.ipynb"

Automatically generated by Colaboratory.
# Визуализация векторов слов на двумерном пространстве

## Инструкция по выполнению задания
Ниже находится несколько  упражнений, представляющих собой код с пропущенными фрагментами, которые надо воспроизвести. Часть из этих упражнений очень простые, над некоторыми надо хорошенько подумать.

Чтобы выполнить это задание, нужно сохранить копию файла себе на Google Диск.



После выполнения задания, его нужно отправить на проверку. Для этого достаточно предоставить доступ к файлу и отправить ссылку в соответствующее поле LMS курса.
Удачи в выполнении заданий!
### Импорт библиотек
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install word2vec
!pip install pymystem3
!pip install pymorphy2
!pip install pymorphy2-dicts
!pip install DAWG-Python

from gensim.models.word2vec import Word2Vec
from gensim.models import KeyedVectors
import re
from pymystem3 import Mystem
from gensim.models.word2vec import Word2Vec
from gensim.models import KeyedVectors
import word2vec
import gensim
import pandas as pd
import re 
from pymystem3 import Mystem
import pymorphy2
import pandas as pd
import nltk
nltk.download('punkt') # для токенизации необходимо скачать модуль
from nltk.stem import WordNetLemmatizer

"""### Упражнение 1

Ознакомьтесь с [видеороликом](https://www.youtube.com/watch?v=__B4kino_9g).
Попробуем воспроизвести последовательность действий для другого текста. [Текст](https://drive.google.com/file/d/1vL-eQESquzRjVEjnDKaF_E9roj0IXtzg/view?usp=sharing) будет про зарплаты программистов. Он взят из [публикации](https://radiosputnik.ria.ru/20220129/programmist-1769412346.html). Подгрузите себе файл. Только в качестве лемматизатора лучше взять уже знакомый нам pymorphy2. Исходный код из видеоролика можно найти по [ссылке](https://github.com/iStoriesMedia/word2vec).
"""

import nltk
nltk.download('punkt')
!pip install pymorphy2
import pymorphy2
import re
from nltk.corpus import stopwords
import nltk
nltk.download('stopwords')

sen = open("/content/программисты.txt", "r")
sen = list(sen)


import pymorphy2
import re
from nltk.corpus import stopwords
morph = pymorphy2.MorphAnalyzer()
tokenized = []
for i in sen:
  tok_sen = ''
  txt = re.findall(r'[а-я]+', i.lower())
  for j in txt:
    if j not in stopwords.words('russian'):
      w = morph.parse(j)[0].normal_form
      if tok_sen == '':
        tok_sen += w
      else:
        tok_sen += (' ' + w)
  tokenized.append(tok_sen)

tokenized

"""### Упражнение 2

Удалим знаки препинания и преобразуем в нижний регистр
"""

sen[0].lower()

txt = re.findall(r'[а-я]+', sen[0].lower())
print(txt)

"""### Упражнение 3

Преобразуем слова текста к исходной форме.
"""

for i in txt: 
  morph = pymorphy2.MorphAnalyzer()
  print(morph.parse(i) )

"""### Упражнение 4

Создадим модель используя команду KeyedVectors.load_word2vec_format()

Для корректной работы модели при формировании словаря через word2vec.word2vec сохраняем файл просто в txt (не bin). Тогда и в load_word2vec_format параметр binary должен быть False.  
"""

model = gensim.models.KeyedVectors.load_word2vec_format('Отобрано.txt')
word2vec.word2vec('/content/программисты.txt', 
                  'Отобрано.txt')

"""### Упражнение 5
Используя функцию most_similar(), получим значения близости слов из словаря друг к другу
"""

for i in model.most_similar(positive=['языке'], topn=200): 
  print(i)

